from sqlalchemy import select
from database.db import async_session
from database.models import User
from aiogram.types import CallbackQuery
from aiogram import Router, F
from keyboards.subscription import (
    subscription_menu,
    currency_choice_keyboard,
    subscription_period_keyboard,
    referral_keyboard  # –¥–æ–±–∞–≤–ª—è–µ–º!
)

router = Router()

@router.callback_query(F.data == "pay")
async def show_subscription_menu(callback: CallbackQuery):
    await callback.message.edit_text(
        "üí≥ –ü–æ–¥–ø–∏—Å–∫–∞ –¥–µ–π—Å—Ç–≤—É–µ—Ç –Ω–∞ –≤—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        reply_markup=subscription_menu()
    )


@router.callback_query(F.data == "choose_currency")
async def choose_currency(callback: CallbackQuery):
    await callback.message.edit_text(
        "üåç –í—ã–±–µ—Ä–∏—Ç–µ –≤–∞–ª—é—Ç—É –¥–ª—è –æ–ø–ª–∞—Ç—ã:",
        reply_markup=currency_choice_keyboard()
    )


@router.callback_query(F.data.in_({"currency_rub", "currency_kg"}))
async def choose_duration(callback: CallbackQuery):
    currency = "rub" if callback.data == "currency_rub" else "kg"
    await callback.message.edit_text(
        "üìÜ –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏:",
        reply_markup=subscription_period_keyboard(currency)
    )


@router.callback_query(F.data == "back_to_subscription")
async def back_to_subscription(callback: CallbackQuery):
    await show_subscription_menu(callback)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ–¥–ø–∏—Å–∫–∏ (–∑–∞–≥–ª—É—à–∫–∞)
@router.callback_query(F.data.startswith("sub_"))
async def handle_subscription_selection(callback: CallbackQuery):
    await callback.message.edit_text("üí∏ –ü–ª–∞—Ç—ë–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞. –≠—Ç–∞ —á–∞—Å—Ç—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.")


@router.callback_query(F.data == "referral")
async def show_referral_info(callback: CallbackQuery):
    user_id = callback.from_user.id
    referral_link = f"https://t.me/didgi_kg_bot?start={user_id}"

    async with async_session() as session:
        user = await session.scalar(select(User).where(User.telegram_id == user_id))
        total_referrals = user.referral_count if user else 0
        activated_referrals = user.activated_referrals if user else 0
        bonus_months = activated_referrals // 15

    await callback.message.edit_text(
        f"üëã <b>–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞</b>\n\n"
        f"üîó –í–∞—à–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: <code>{referral_link}</code>\n\n"
        f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
        f"‚Ä¢ –í—Å–µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤: <b>{total_referrals}</b>\n"
        f"‚Ä¢ –ê–∫—Ç–∏–≤–∞—Ü–∏–π: <b>{activated_referrals}</b> –∏–∑ 15\n"
        f"‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã—Ö –º–µ—Å—è—Ü–µ–≤: <b>{bonus_months}</b>",
        parse_mode="HTML",
        reply_markup=referral_keyboard(referral_link)
    )
