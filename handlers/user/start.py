from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from sqlalchemy import select
from datetime import datetime
from database.db import async_session
from database.models import User
from aiogram.types import CallbackQuery


router = Router()
@router.message(F.text.startswith("/start"))
async def start_handler(message: Message):
    args = message.text.split()
    referrer_telegram_id = None

    if len(args) > 1:
        try:
            referrer_telegram_id = int(args[1])
        except ValueError:
            referrer_telegram_id = None

    async with async_session() as session:
        user = await session.scalar(
            select(User).where(User.telegram_id == message.from_user.id)
        )

        if not user:
            # –ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            new_user = User(
                telegram_id=message.from_user.id,
                username=message.from_user.username,
                registered_at=datetime.utcnow(),
                trial_end=None,
                is_subscribed=False,
                referrer_id=referrer_telegram_id
            )
            session.add(new_user)

            # –ï—Å–ª–∏ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–π –µ—Å—Ç—å –∏ —ç—Ç–æ –Ω–µ –æ–Ω —Å–∞–º
            if referrer_telegram_id and referrer_telegram_id != message.from_user.id:
                referrer = await session.scalar(
                    select(User).where(User.telegram_id == referrer_telegram_id)
                )
                if referrer:
                    referrer.referral_count = (referrer.referral_count or 0) + 1
                    referrer.activated_referrals = (referrer.activated_referrals or 0) + 1

            await session.commit()

    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÅ –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –Ω–∞ 3 –¥–Ω—è", callback_data="free_trial")],
        [InlineKeyboardButton(text="üì¢ DIGDI –∫–∞–Ω–∞–ª", url="https://t.me/digidichannel")],
        [InlineKeyboardButton(text="üí≥ –û–ø–ª–∞—Ç–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="pay")],
        [InlineKeyboardButton(text="üìò –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ", callback_data="guide")],
        [InlineKeyboardButton(text="üõ† –¢–ï–• –ü–û–î–î–ï–†–ñ–ö–ê", callback_data="support")]
    ])

    await message.answer(
        "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\n–í–æ—Ç —á—Ç–æ —è —É–º–µ—é:\n\n"
        "‚Ä¢ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –Ω–∞ 3 –¥–Ω—è\n"
        "‚Ä¢ –î–æ—Å—Ç—É–ø –∫ DIGDI-–∫–∞–Ω–∞–ª—É\n"
        "‚Ä¢ –ü–æ–¥–ø–∏—Å–∫–∞ –∏ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞\n\n"
        "üëá –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω–æ–µ:",
        reply_markup=keyboard
    )